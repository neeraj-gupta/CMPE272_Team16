<html>
<head>
	<link rel="stylesheet" id="jquery-tipsy-css" href="stylesheets/jquery.jqplot.css" type="text/css" media="all" />
    <script type="text/javascript" src="js/jquery.jqplot.min.js"></script>
	<script type="text/javascript">
		function graph() {	
						
			var graphCanvas = document.getElementById('graphSpace');
			// Ensure that the element is available within the DOM
			if (graphCanvas && graphCanvas.getContext) {
				// Open a 2D context within the canvas
				var context = graphCanvas.getContext('2d');

				// Bar chart data
				var data=new Array(5);
				data[0] = "<%=results[0]%>";
				data[1]="<%=results[1]%>";
				data[2]="<%=results[2]%>";
				data[3]="<%=results[3]%>";
				data[4]="<%=results[4]%>";
				//alert(data[0]);
				
				// Draw the bar chart
				drawBarChart(context, data, 100, 100, 500, 500);
				
				//drawLineChart(data, 'visa', 2010, 2014, 1000, 50000, '');
			}
		}
		
		// drawBarChart - draws a bar chart with the specified data
		function drawBarChart(context, data, startX, barWidth, chartHeight, markDataIncrementsIn) {
			// Draw the x and y axes
			context.lineWidth = "1.0";
			var startY = chartHeight;
			drawLine(context, startX, startY, startX, 30); 
			drawLine(context, startX, startY, 570, startY);			
			context.lineWidth = "0.0";
			var maxValue = 5000;
			for (var i=0; i<data.length; i++) {
				// Extract the data
				var values = data[i].split(",");
				var name = values[0];
				var height = parseInt(values[1]);
				
				//if (parseInt(height) > parseInt(maxValue)) maxValue = height;
				// Write data to chart
				context.fillStyle = "#b90000";
				drawRectangle(context, startX + (i * barWidth) + i, (chartHeight-(height/100)), barWidth, height, true);
				// Add the column title to the x-axis
				context.textAlign = "left";
				context.fillStyle = "#000";
				context.fillText(name, startX + (i * barWidth) + i, chartHeight , 200);				
			}
			// Add some data markers to the y-axis
			var numMarkers = Math.ceil(maxValue / markDataIncrementsIn);
			
			context.textAlign = "right";
			context.fillStyle = "#000";
			var markerValue = 0;
			for (var i=0; i<numMarkers; i++) {		
				context.fillText(markerValue, startX-10, chartHeight-markerValue, 70);
				markerValue += markDataIncrementsIn;
			}
		}		
		
		// drawLine - draws a line on a canvas context from the start point to the end point 
		function drawLine(contextO, startx, starty, endx, endy) {
			contextO.beginPath();
			contextO.moveTo(startx, starty);
			contextO.lineTo(endx, endy);
			contextO.closePath();
			contextO.stroke();
		}
		
		// drawRectanle - draws a rectangle on a canvas context using the dimensions specified
		function drawRectangle(contextO, x, y, w, h, fill) {			
			contextO.beginPath();
			contextO.rect(x, y, w, h);
			contextO.closePath();
			contextO.stroke();
			if (fill) contextO.fill();
		}
	
	    /*function drawLineChart(seriesValues,legendValues, minYear, maxYear, minAdmit, maxAdmit, yaxisFormat){
	        $('#graphSpace').empty();                
	        $.jqplot('graphSpace',seriesValues,{
	                //title:'Admission Statistics Plot',                
	                highlighter:{
	                    show: true,
	                    sizeAdjust: 7.5
	                },
	                animate: true,                
	                animateReplot: true,
	                seriesColors: [ "#CC0000", "#222222"],
	                legend: {
	                    renderer: $.jqplot.EnhancedLegendRenderer,
	                    show: true,
	                    placement: 'outsideGrid',            
	                    location: 's',
	                    rowSpacing: '0px',
	                    rendererOptions: {
	                        numberRows: 1
	                    }
	                },
	                series:legendValues,
	                axes: {            
	                    xaxis: {
	                        labelRenderer: $.jqplot.CanvasAxisLabelRenderer,                        
	                        min: parseInt(minYear),
	                        max: parseInt(maxYear),                        
	                        //label: "Year",  
	                        tickOptions: {
	                            formatString: '%d'
	                        },
	                        tickInterval: 1,
	                        pad:10,
	                    },
	                    yaxis: {
	                        labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
	                        min: parseInt(minAdmit),
	                        max: parseInt(maxAdmit),  
	                        //label: "Admits",
	                        tickOptions: {
	                            formatString: '%d'+yaxisFormat
	                        }
	                    }
	                },                
	        });
	    }*/
	</script>
</head>

<body onLoad="graph();"> 
	<article>
		<h1>Cities</h1>		
		<canvas id="graphSpace" width="800" height="500"></canvas>		
	</article>
</body>
</html>